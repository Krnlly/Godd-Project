local lIlIi1i1iI1l11llI1Il1 = assert local Iiii1II111liiIllIIl = select local I11lIllI1I1I1IIil1i = tonumber local II1Illii1l1ili1iI1I = unpack local II1IllIlIilll1IllIl = pcall local ilili1liliiI1lIlli1 = setfenv local illI1I1iI1lIlli1iII = setmetatable local Ilii1i11l1IliIiliii = type local IliIIi1I1i1I1i1lii1 = getfenv local li1i1I1I1llIil1l1Il = tostring local i1iiii111li1IIiil1i = error local i1iliilililili1i1iI = string.sub local IlI11iliiI11II1ilI1 = string.byte local lIliI1l1liII1iIliiIii = string.char local ii1ilIIIIlilIIilI11 = string.rep local IIlIi1ll1Ii1IIlIiII = string.gsub local lIl1I1IlliilI11lI1Iii = string.match local IIil11l11IlllIiiIIi = table.insert local lii11lIlIiIl1liilIi = IlI11iliiI11II1ilI1("$", 1) local il1ii11IiiI111ilI1i, lIllillI11liiIi1IillI = #{5856}, #{ 6086, 6659, 303, 3077, 3804, 1667, 4668, 3941, 3001, 5420, 3708, 5514, 2327, 355, 2162, 3865, 4761, 1839, 2032, 4150, 51, 1582, 6674 } + lii11lIlIiIl1liilIi + 131012 local IIlIl1l1IlIIiI1l1Il = {} local llllIiI11llIIli1iI1 = 1 local lilillli11lIllIlli1, lii1il1i1IIIIIlllli local function Iii1Iiil11iIll11I11(iii1iliI1iIi1i11II1, lll1lIiiIiIli11Iiii) local llIl1i11ililIIIliIi iii1iliI1iIi1i11II1 = IIlIi1ll1Ii1IIlIiII(i1iliilililili1i1iI(iii1iliI1iIi1i11II1, 5), "..", function(lIl1ii11lIl1lillllil1) if IlI11iliiI11II1ilI1(lIl1ii11lIl1lillllil1, 2) == 72 then llIl1i11ililIIIliIi = I11lIllI1I1I1IIil1i(i1iliilililili1i1iI(lIl1ii11lIl1lillllil1, 1, 1)) return "" else local l1IiIiIi11IIiIil111 = lIliI1l1liII1iIliiIii(I11lIllI1I1I1IIil1i(lIl1ii11lIl1lillllil1, 16)) if llIl1i11ililIIIliIi then local I11li111llliIIlliII = ii1ilIIIIlilIIilI11(l1IiIiIi11IIiIil111, llIl1i11ililIIIliIi) llIl1i11ililIIIliIi = nil return I11li111llliIIlliII else return l1IiIiIi11IIiIil111 end end end) local function iiI1il1lIiliI1lI1lI() local li1iIi1iIli11iIllll = IlI11iliiI11II1ilI1(iii1iliI1iIi1i11II1, llllIiI11llIIli1iI1, llllIiI11llIIli1iI1) llllIiI11llIIli1iI1 = llllIiI11llIIli1iI1 + 1 return li1iIi1iIli11iIllll end local function iI1ili1iliI1lIIli1I() local li1iIi1iIli11iIllll, l1IiIiIi11IIiIil111, I11li111llliIIlliII, lIlI1l1l11iIilil1i1II = IlI11iliiI11II1ilI1(iii1iliI1iIi1i11II1, llllIiI11llIIli1iI1, llllIiI11llIIli1iI1 + 3) llllIiI11llIIli1iI1 = llllIiI11llIIli1iI1 + 4 return lIlI1l1l11iIilil1i1II * 16777216 + I11li111llliIIlliII * 65536 + l1IiIiIi11IIiIil111 * 256 + li1iIi1iIli11iIllll end local function ililIlIli1Illlll1il(I1iiiIliIiilI1i1Ili, lIl1l1i1iiii1l1iI111i, lIl1llliiIi1I11I11ill) if lIl1llliiIi1I11I11ill then local l1i1lIlI1Il1liIilil, iil1i1i1lI1lIlI1111 = 0, 0 for IiIl11IIIllI11IllII = lIl1l1i1iiii1l1iI111i, lIl1llliiIi1I11I11ill do l1i1lIlI1Il1liIilil = l1i1lIlI1Il1liIilil + 2 ^ iil1i1i1lI1lIlI1111 * ililIlIli1Illlll1il(I1iiiIliIiilI1i1Ili, IiIl11IIIllI11IllII) iil1i1i1lI1lIlI1111 = iil1i1i1lI1lIlI1111 + 1 end return l1i1lIlI1Il1liIilil else local lIlIIIiIIl1I1l1iIlilI = 2 ^ (lIl1l1i1iiii1l1iI111i - 1) return lIlIIIiIIl1I1l1iIlilI <= I1iiiIliIiilI1i1Ili % (lIlIIIiIIl1I1l1iIlilI + lIlIIIiIIl1I1l1iIlilI) and 1 or 0 end end local function i1l111i1li111IiiiII() local li1iIi1iIli11iIllll, l1IiIiIi11IIiIil111 = iI1ili1iliI1lIIli1I(), iI1ili1iliI1lIIli1I() if li1iIi1iIli11iIllll == 0 and l1IiIiIi11IIiIil111 == 0 then return 0 end return (-2 * ililIlIli1Illlll1il(l1IiIiIi11IIiIil111, 32) + 1) * 2 ^ (ililIlIli1Illlll1il(l1IiIiIi11IIiIil111, 21, 31) - 1023) * ((ililIlIli1Illlll1il(l1IiIiIi11IIiIil111, 1, 20) * 4294967296 + li1iIi1iIli11iIllll) / 4503599627370496 + 1) end local lIl1I1iIil1iliIi1ili1 = bit or bit32 local lll1iIlI11ll1liilll = lIl1I1iIil1iliIi1ili1 and lIl1I1iIil1iliIi1ili1.bxor or function(li1iIi1iIli11iIllll, l1IiIiIi11IIiIil111) local l11l1IIIilIlI11lliI = 1 local I11li111llliIIlliII = 0 while li1iIi1iIli11iIllll > 0 and l1IiIiIi11IIiIil111 > 0 do local lIli1i1i1i1I11l1ii11l = li1iIi1iIli11iIllll % 2 local l1IIl1I1iIllliIl1II = l1IiIiIi11IIiIil111 % 2 if lIli1i1i1i1I11l1ii11l ~= l1IIl1I1iIllliIl1II then I11li111llliIIlliII = I11li111llliIIlliII + l11l1IIIilIlI11lliI end li1iIi1iIli11iIllll = (li1iIi1iIli11iIllll - lIli1i1i1i1I11l1ii11l) / 2 l1IiIiIi11IIiIil111 = (l1IiIiIi11IIiIil111 - l1IIl1I1iIllliIl1II) / 2 l11l1IIIilIlI11lliI = l11l1IIIilIlI11lliI * 2 end if li1iIi1iIli11iIllll < l1IiIiIi11IIiIil111 then li1iIi1iIli11iIllll = l1IiIiIi11IIiIil111 end while li1iIi1iIli11iIllll > 0 do local lIli1i1i1i1I11l1ii11l = li1iIi1iIli11iIllll % 2 if lIli1i1i1i1I11l1ii11l > 0 then I11li111llliIIlliII = I11li111llliIIlliII + l11l1IIIilIlI11lliI end li1iIi1iIli11iIllll = (li1iIi1iIli11iIllll - lIli1i1i1i1I11l1ii11l) / 2 l11l1IIIilIlI11lliI = l11l1IIIilIlI11lliI * 2 end return I11li111llliIIlliII end local function lIlIiil1111i11l11Iill(iIIi1iiiIiIIIl1IIIl) local i1Il1ll111l1I1i1liI = { IlI11iliiI11II1ilI1(iii1iliI1iIi1i11II1, llllIiI11llIIli1iI1, llllIiI11llIIli1iI1 + 3) } llllIiI11llIIli1iI1 = llllIiI11llIIli1iI1 + 4 local li1iIi1iIli11iIllll = lll1iIlI11ll1liilll(i1Il1ll111l1I1i1liI[1], lii1il1i1IIIIIlllli) local l1IiIiIi11IIiIil111 = lll1iIlI11ll1liilll(i1Il1ll111l1I1i1liI[2], lii1il1i1IIIIIlllli) local I11li111llliIIlliII = lll1iIlI11ll1liilll(i1Il1ll111l1I1i1liI[3], lii1il1i1IIIIIlllli) local lIlI1l1l11iIilil1i1II = lll1iIlI11ll1liilll(i1Il1ll111l1I1i1liI[4], lii1il1i1IIIIIlllli) lii1il1i1IIIIIlllli = (185 * lii1il1i1IIIIIlllli + iIIi1iiiIiIIIl1IIIl) % 256 return lIlI1l1l11iIilil1i1II * 16777216 + I11li111llliIIlliII * 65536 + l1IiIiIi11IIiIil111 * 256 + li1iIi1iIli11iIllll end local function lIl1I1llliIilii1IIl11(IlIIliiii1lIIi1lll1) local II1i1liI1iilIlIIliI = iI1ili1iliI1lIIli1I() local I1ii1lIl11iiIiIl1lI = "" for IiIl11IIIllI11IllII = il1ii11IiiI111ilI1i, II1i1liI1iilIlIIliI do I1ii1lIl11iiIiIl1lI = I1ii1lIl11iiIiIl1lI .. lIliI1l1liII1iIliiIii(lll1iIlI11ll1liilll(IlI11iliiI11II1ilI1(iii1iliI1iIi1i11II1, llllIiI11llIIli1iI1 + IiIl11IIIllI11IllII - 1), lilillli11lIllIlli1)) lilillli11lIllIlli1 = (IlIIliiii1lIIi1lll1 * lilillli11lIllIlli1 + 125) % 256 end llllIiI11llIIli1iI1 = llllIiI11llIIli1iI1 + II1i1liI1iilIlIIliI return I1ii1lIl11iiIiIl1lI end lilillli11lIllIlli1 = iiI1il1lIiliI1lI1lI() lii1il1i1IIIIIlllli = iiI1il1lIiliI1lI1lI() local llIiiIiiIiilIliliIi = {} for IiIl11IIIllI11IllII = il1ii11IiiI111ilI1i, iiI1il1lIiliI1lI1lI() do local l11Ii11Il11lli1illI = iiI1il1lIiliI1lI1lI() local ilIIl1l111Iii1I1I1I = (IiIl11IIIllI11IllII - 1) * 2 llIiiIiiIiilIliliIi[ilIIl1l111Iii1I1I1I] = ililIlIli1Illlll1il(l11Ii11Il11lli1illI, 1, 4) llIiiIiiIiilIliliIi[ilIIl1l111Iii1I1I1I + 1] = ililIlIli1Illlll1il(l11Ii11Il11lli1illI, 5, 8) end local function IilIiIi1i11l1iIi1i1() local IiiIilIIiiIII1ii11l = { {}, nil, {}, nil, {}, nil, {} } iiI1il1lIiliI1lI1lI() iI1ili1iliI1lIIli1I() local ll1iI1il11lIII111ll = iI1ili1iliI1lIIli1I() for IiIl11IIIllI11IllII = il1ii11IiiI111ilI1i, ll1iI1il11lIII111ll do IiiIilIIiiIII1ii11l[1][IiIl11IIIllI11IllII - il1ii11IiiI111ilI1i] = IilIiIi1i11l1iIi1i1() end iI1ili1iliI1lIIli1I() iiI1il1lIiliI1lI1lI() iI1ili1iliI1lIIli1I() iiI1il1lIiliI1lI1lI() IiiIilIIiiIII1ii11l[6] = iiI1il1lIiliI1lI1lI() local ll1iI1il11lIII111ll = iI1ili1iliI1lIIli1I() - (#{ 6224, 6413, 5292, 5113, 4119, 6834, 1876, 6735, 442, 1934, 2029, 1906, 2921, 1169, 1478, 3642, 6887, 3248, 1625, 4596, 3098, 3671, 5244, 5413 } + lii11lIlIiIl1liilIi + 133725) local iI1ll1IllllIiIiilIi = iiI1il1lIiliI1lI1lI() for IiIl11IIIllI11IllII = il1ii11IiiI111ilI1i, ll1iI1il11lIII111ll do local i1ii11II1lliiilIi1I local Ilii1i11l1IliIiliii = iiI1il1lIiliI1lI1lI() if Ilii1i11l1IliIiliii == #{} then i1ii11II1lliiilIi1I = #{ 5363, 482, 4732, 3603, 4912, 6157, 810, 6938, 2062, 2592, 4128, 3532, 4947, 4956, 2871, 1256, 537, 2508, 2022, 4063, 3167, 3538 } + lii11lIlIiIl1liilIi + 107692 == #{ 2064, 4770, 3879, 470, 1104, 6462, 5619, 6464, 3360, 2501, 775, 4199, 1707, 3020, 3394, 1776, 1726, 2519, 3577, 5752, 3875, 5041, 3008 } + lii11lIlIiIl1liilIi + 48126 end if Ilii1i11l1IliIiliii == #{ 1551, 2950, 1882, 3534, 99, 2937, 6807, 876, 6067, 4425, 2531, 678, 329, 2883, 1962, 6089, 1179, 4561, 3340, 2127, 2309 } + lii11lIlIiIl1liilIi + 22 then i1ii11II1lliiilIi1I = i1iliilililili1i1iI(lIl1I1llliIilii1IIl11(insEncKey), #{1019, 5775}) end if Ilii1i11l1IliIiliii == #{ 5152, 4529, 4938, 2456, 4562, 3, 1574, 5752, 3461, 2732, 5891, 2530, 3692, 448, 3443, 3462, 5855, 3254, 2664, 3072, 5606, 4846, 444, 5161 } + lii11lIlIiIl1liilIi + 97 then i1ii11II1lliiilIi1I = iI1ili1iliI1lIIli1I() end if Ilii1i11l1IliIiliii == #{ 6723, 1276, 42, 6898, 3300, 3856, 4306, 2177, 6901, 4008, 4619, 3293, 840, 4240, 1272, 5823, 208, 267, 2700, 5064, 3620 } + lii11lIlIiIl1liilIi + -22 then i1ii11II1lliiilIi1I = iI1ili1iliI1lIIli1I() end if Ilii1i11l1IliIiliii == #{ 6238, 227, 3120, 1437, 3895, 4567, 856, 5119, 4703, 1181, 2553, 5967, 3609, 3568, 2727, 297, 6405, 2118, 2378, 3356, 1384, 6032, 2704 } + lii11lIlIiIl1liilIi + 101 then i1ii11II1lliiilIi1I = i1l111i1li111IiiiII() end if Ilii1i11l1IliIiliii == #{ 5648, 1512, 1492, 4459, 4717, 6539, 4859, 1663, 1100, 4155, 72, 3041, 5079, 1281, 3753, 2279, 3028, 1640, 1418, 2347, 5451, 3835, 4333 } + lii11lIlIiIl1liilIi + 150 then i1ii11II1lliiilIi1I = #{ 5838, 61, 3169, 218, 1383, 804, 1384, 4006, 1650, 2845, 1824, 1219, 4862, 414, 6188, 5941, 1847, 6250, 5820, 3689, 3975, 4665 } + lii11lIlIiIl1liilIi + 53132 == #{ 5838, 61, 3169, 218, 1383, 804, 1384, 4006, 1650, 2845, 1824, 1219, 4862, 414, 6188, 5941, 1847, 6250, 5820, 3689, 3975, 4665 } + lii11lIlIiIl1liilIi + 53132 end if Ilii1i11l1IliIiliii == #{ 6274, 772, 2512, 895, 2493, 3160, 5572, 4897, 1793, 2722, 3850, 3078, 4507, 864, 1129, 5635, 6727, 4341, 3759, 5256 } + lii11lIlIiIl1liilIi + 75 then i1ii11II1lliiilIi1I = i1iliilililili1i1iI(lIl1I1llliIilii1IIl11(iI1ll1IllllIiIiilIi), #{ 5656, 3219, 1903, 4129 }) end if Ilii1i11l1IliIiliii == #{ 1350, 1314, 127, 1218, 4482, 6275, 3273, 2552, 34, 3019, 5662, 536, 1050, 6235, 6607, 5651, 4191, 3135, 431, 6498, 6568, 6745, 6437 } + lii11lIlIiIl1liilIi + 99 then i1ii11II1lliiilIi1I = i1iliilililili1i1iI(lIl1I1llliIilii1IIl11(#{ 1279, 2155, 5469, 3516, 1309, 2539, 2492, 5071, 2604, 349, 4884, 6799, 1402, 5014, 2561, 942, 6667, 6241, 5795, 3667 } + lii11lIlIiIl1liilIi + 64), #{ 5001, 2240, 4650 }) end if Ilii1i11l1IliIiliii == #{ 2069, 382, 5065, 690, 4866, 4965, 6547, 2005, 6687, 1333, 6555, 6007, 3767, 5309, 2603, 3551, 3724, 49, 1447, 286, 3674 } + lii11lIlIiIl1liilIi + 39 then i1ii11II1lliiilIi1I = i1l111i1li111IiiiII() end IiiIilIIiiIII1ii11l[3][IiIl11IIIllI11IllII - il1ii11IiiI111ilI1i] = i1ii11II1lliiilIi1I end local ll1iI1il11lIII111ll = iI1ili1iliI1lIIli1I() for IiIl11IIIllI11IllII = il1ii11IiiI111ilI1i, ll1iI1il11lIII111ll do IiiIilIIiiIII1ii11l[7][IiIl11IIIllI11IllII] = iI1ili1iliI1lIIli1I() end iiI1il1lIiliI1lI1lI() local i1lIIiiIlIIlli1Ilil = iI1ili1iliI1lIIli1I() - (#{ 1806, 1798, 5631, 2539, 3789, 5111, 1280, 4499, 4474, 2664, 536, 6910, 5913, 5120, 6960, 423, 2114, 2583, 1763, 5725, 4388, 2939, 6783, 3939 } + lii11lIlIiIl1liilIi + 133703) local lIlIlil1IIl11Il11liII = iiI1il1lIiliI1lI1lI() for IiIl11IIIllI11IllII = il1ii11IiiI111ilI1i, i1lIIiiIlIIlli1Ilil do local lIllIiIIliliIIliilllI = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local l11Ii11Il11lli1illI = lIlIiil1111i11l11Iill(lIlIlil1IIl11Il11liII) lIllIiIIliliIIliilllI[7] = ililIlIli1Illlll1il(l11Ii11Il11lli1illI, #{ 1804, 2905, 684, 3461, 576, 1560, 3600, 4735, 6670, 1217, 4433, 676, 1830, 4860, 5293, 2658, 3641, 5447, 5755 }, #{ 6372, 3748, 1633, 1321, 715, 5622, 2734, 4928, 1471, 3541, 1080, 6683, 3981, 4761, 4622, 904, 6379, 6093, 6382, 288 } + lii11lIlIiIl1liilIi + -30) lIllIiIIliliIIliilllI[8] = ililIlIli1Illlll1il(l11Ii11Il11lli1illI, #{ 3367, 1719, 6918, 6931, 3289, 4744, 2171, 5172, 3830, 1874, 2567, 5072, 2971, 1479, 545, 6371, 4359, 633, 383, 2317, 4546, 6427 } + lii11lIlIiIl1liilIi + -31, #{ 5608, 6768, 3404, 5828, 4581, 5356, 524, 1159, 4704, 2019, 2294, 4634, 6187, 4514, 822, 1361, 193, 1344, 1206, 5459, 557, 3760, 6384, 4054 } + lii11lIlIiIl1liilIi + -28) lIllIiIIliliIIliilllI[1] = ililIlIli1Illlll1il(l11Ii11Il11lli1illI, #{761}, #{ 2932, 6319, 4764, 6729, 5027, 3902, 6258, 532, 6525, 1982, 5369, 3977, 5606, 5817, 4339, 4587, 337, 5415 }) lIllIiIIliliIIliilllI[6] = ililIlIli1Illlll1il(l11Ii11Il11lli1illI, #{6324}, #{ 4232, 3386, 6353, 4025, 4069, 1792, 3906, 6812, 3250 }) lIllIiIIliliIIliilllI[2] = ililIlIli1Illlll1il(l11Ii11Il11lli1illI, #{ 4914, 900, 4309, 1759, 1830, 127, 50, 5278, 4143, 2502 }, #{ 1183, 1185, 4276, 1822, 6170, 5554, 5721, 5856, 4961, 84, 6905, 1086, 5312, 2969, 6642, 722, 6593, 5880 }) IiiIilIIiiIII1ii11l[5][IiIl11IIIllI11IllII] = lIllIiIIliliIIliilllI end for IiIl11IIIllI11IllII = il1ii11IiiI111ilI1i, i1lIIiiIlIIlli1Ilil do local lIllIiIIliliIIliilllI = IiiIilIIiiIII1ii11l[5][IiIl11IIIllI11IllII] local l1iill11l1I11lIIi1I = llIiiIiiIiilIliliIi[lIllIiIIliliIIliilllI[8]] if l1iill11l1I11lIIi1I == #{ 268, 1943, 2937, 3372 } then lIllIiIIliliIIliilllI[5] = IiiIilIIiiIII1ii11l[3][lIllIiIIliliIIliilllI[1]] end if l1iill11l1I11lIIi1I == #{3631} and lIllIiIIliliIIliilllI[6] > 255 then lIllIiIIliliIIliilllI[3] = true lIllIiIIliliIIliilllI[9] = IiiIilIIiiIII1ii11l[3][lIllIiIIliliIIliilllI[6] - 256] end if l1iill11l1I11lIIi1I == #{1586, 4650} and lIllIiIIliliIIliilllI[2] > 255 then lIllIiIIliliIIliilllI[4] = true lIllIiIIliliIIliilllI[10] = IiiIilIIiiIII1ii11l[3][lIllIiIIliliIIliilllI[2] - 256] end if l1iill11l1I11lIIi1I == #{ 4606, 750, 2672 } then if lIllIiIIliliIIliilllI[6] > 255 then lIllIiIIliliIIliilllI[3] = true lIllIiIIliliIIliilllI[9] = IiiIilIIiiIII1ii11l[3][lIllIiIIliliIIliilllI[6] - 256] end if lIllIiIIliliIIliilllI[2] > 255 then lIllIiIIliliIIliilllI[4] = true lIllIiIIliliIIliilllI[10] = IiiIilIIiiIII1ii11l[3][lIllIiIIliliIIliilllI[2] - 256] end end end iiI1il1lIiliI1lI1lI() iI1ili1iliI1lIIli1I() iI1ili1iliI1lIIli1I() IiiIilIIiiIII1ii11l[4] = iiI1il1lIiliI1lI1lI() IiiIilIIiiIII1ii11l[2] = iiI1il1lIiliI1lI1lI() iiI1il1lIiliI1lI1lI() iI1ili1iliI1lIIli1I() return IiiIilIIiiIII1ii11l end local function IlIlliIii1lIll1I1l1(IiiIilIIiiIII1ii11l, lll1lIiiIiIli11Iiii, lll1iiiIillIiIlII1I) local liii1111IIiiIili11l, lIli1IIIiiIiIlli11ll1 = 6, 3 local liIiIIii1lIii1IIiI1 = IiiIilIIiiIII1ii11l[5] local lIl1llI1iIlII11i111lI = 6 local ilIliI1ll1l1I1ii1li = IiiIilIIiiIII1ii11l[1] local ilIl11iiIlliIli1Il1 = IiiIilIIiiIII1ii11l[4] local l1Ii1iil1l11il1iIlI = IiiIilIIiiIII1ii11l[2] local l11IiIIill1iiI1iI1i = 8 local iiIiIl1li1IiIIi1lil = IiiIilIIiiIII1ii11l[7] local iiIl1Ii1IiillIl1I1i = 6 local function ii11Iili111l11111il(...) local lIliIIIilllIIlI1IIiil = 0 local il1ll1i1i1Iii11i1i1 = { II1Illii1l1ili1iI1I({}, 1, l1Ii1iil1l11il1iIlI) } local ilI11lli1illi11IlII = 1 local I111iIll1lliIIIIlIl = {} local liIIilll1I1iIii1IlI = {} local lll1lIiiIiIli11Iiii = IliIIi1I1i1I1i1lii1() local IIliIliii1ililiIIII = { ... } local Il1iIii1Ii1iIiIIiIi = #IIliIliii1ililiIIII - 1 for IiIl11IIIllI11IllII = 0, Il1iIii1Ii1iIiIIiIi do if IiIl11IIIllI11IllII < ilIl11iiIlliIli1Il1 then il1ll1i1i1Iii11i1i1[IiIl11IIIllI11IllII] = IIliIliii1ililiIIII[IiIl11IIIllI11IllII + 1] end end local function lIlililliIillliIl11il(...) local I11li111llliIIlliII = Iiii1II111liiIllIIl("#", ...) local ii1IlIl1Ii1111lIiii = { ... } return I11li111llliIIlliII, ii1IlIl1Ii1111lIiii end local function ll1l1IiiIIllIiIIi11() while true do local lIl11l1IiI1lI1Iilll11 = liIiIIii1lIii1IIiI1[ilI11lli1illi11IlII] local i1l1ll1i1l1IlIli1lI = lIl11l1IiI1lI1Iilll11[8] ilI11lli1illi11IlII = ilI11lli1illi11IlII + 1 if i1l1ll1i1l1IlIli1lI >= 9 then if i1l1ll1i1l1IlIli1lI >= 13 then if i1l1ll1i1l1IlIli1lI >= 15 then if i1l1ll1i1l1IlIli1lI >= 16 then if i1l1ll1i1l1IlIli1lI == 17 then local l1IiIiIi11IIiIil111, I11li111llliIIlliII if lIl11l1IiI1lI1Iilll11[3] then l1IiIiIi11IIiIil111 = lIl11l1IiI1lI1Iilll11[9] else l1IiIiIi11IIiIil111 = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[6]] end if lIl11l1IiI1lI1Iilll11[4] then I11li111llliIIlliII = lIl11l1IiI1lI1Iilll11[10] else I11li111llliIIlliII = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[2]] end if l1IiIiIi11IIiIil111 == I11li111llliIIlliII ~= (lIl11l1IiI1lI1Iilll11[7] ~= 0) then ilI11lli1illi11IlII = ilI11lli1illi11IlII + 1 end else il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = lIl11l1IiI1lI1Iilll11[5] end else local lIlIll1liI111IIlill1l = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[6]] for IiIl11IIIllI11IllII = lIl11l1IiI1lI1Iilll11[6] + 1, lIl11l1IiI1lI1Iilll11[2] do lIlIll1liI111IIlill1l = lIlIll1liI111IIlill1l .. il1ll1i1i1Iii11i1i1[IiIl11IIIllI11IllII] end il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = lIlIll1liI111IIlill1l end elseif i1l1ll1i1l1IlIli1lI == 14 then il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = lll1lIiiIiIli11Iiii[lIl11l1IiI1lI1Iilll11[5]] elseif lIl11l1IiI1lI1Iilll11[2] == 222 then ilI11lli1illi11IlII = ilI11lli1illi11IlII - 1 liIiIIii1lIii1IIiI1[ilI11lli1illi11IlII] = { [8] = 12, [7] = (lIl11l1IiI1lI1Iilll11[7] - 197) % 256, [6] = (lIl11l1IiI1lI1Iilll11[6] - 197) % 256 } else il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = -il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[6]] end elseif i1l1ll1i1l1IlIli1lI < 11 then if i1l1ll1i1l1IlIli1lI == 10 then local l1IiIiIi11IIiIil111, I11li111llliIIlliII if lIl11l1IiI1lI1Iilll11[3] then l1IiIiIi11IIiIil111 = lIl11l1IiI1lI1Iilll11[9] else l1IiIiIi11IIiIil111 = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[6]] end if lIl11l1IiI1lI1Iilll11[4] then I11li111llliIIlliII = lIl11l1IiI1lI1Iilll11[10] else I11li111llliIIlliII = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[2]] end il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]][l1IiIiIi11IIiIil111] = I11li111llliIIlliII else local IilililIIiIIiiIIIl1 = lIl11l1IiI1lI1Iilll11[7] local IIliIliii1ililiIIII = lIl11l1IiI1lI1Iilll11[6] local ll1Ii1Iill1lI1llIiI = lIl11l1IiI1lI1Iilll11[2] local IlIi1iIIli1iIill1I1, i1lIlIiIli1Ii11l1ii, ll1l1IiiIIllIiIIi11 if IIliIliii1ililiIIII ~= 1 then if IIliIliii1ililiIIII ~= 0 then i1lIlIiIli1Ii11l1ii = IilililIIiIIiiIIIl1 + IIliIliii1ililiIIII - 1 else i1lIlIiIli1Ii11l1ii = lIliIIIilllIIlI1IIiil end i1lIlIiIli1Ii11l1ii, IlIi1iIIli1iIill1I1 = lIlililliIillliIl11il(il1ll1i1i1Iii11i1i1[IilililIIiIIiiIIIl1](II1Illii1l1ili1iI1I(il1ll1i1i1Iii11i1i1, IilililIIiIIiiIIIl1 + 1, i1lIlIiIli1Ii11l1ii))) else i1lIlIiIli1Ii11l1ii, IlIi1iIIli1iIill1I1 = lIlililliIillliIl11il(il1ll1i1i1Iii11i1i1[IilililIIiIIiiIIIl1]()) end if ll1Ii1Iill1lI1llIiI ~= 1 then if ll1Ii1Iill1lI1llIiI ~= 0 then i1lIlIiIli1Ii11l1ii = IilililIIiIIiiIIIl1 + ll1Ii1Iill1lI1llIiI - 2 lIliIIIilllIIlI1IIiil = i1lIlIiIli1Ii11l1ii + 1 else i1lIlIiIli1Ii11l1ii = i1lIlIiIli1Ii11l1ii + IilililIIiIIiiIIIl1 - 1 lIliIIIilllIIlI1IIiil = i1lIlIiIli1Ii11l1ii end ll1l1IiiIIllIiIIi11 = 0 for IiIl11IIIllI11IllII = IilililIIiIIiiIIIl1, i1lIlIiIli1Ii11l1ii do ll1l1IiiIIllIiIIi11 = ll1l1IiiIIllIiIIi11 + 1 il1ll1i1i1Iii11i1i1[IiIl11IIIllI11IllII] = IlIi1iIIli1iIill1I1[ll1l1IiiIIllIiIIi11] end else lIliIIIilllIIlI1IIiil = IilililIIiIIiiIIIl1 - 1 end for IiIl11IIIllI11IllII = lIliIIIilllIIlI1IIiil + 1, l1Ii1iil1l11il1iIlI do il1ll1i1i1Iii11i1i1[IiIl11IIIllI11IllII] = nil end end elseif i1l1ll1i1l1IlIli1lI ~= 12 then if lIl11l1IiI1lI1Iilll11[6] == 245 then ilI11lli1illi11IlII = ilI11lli1illi11IlII - 1 liIiIIii1lIii1IIiI1[ilI11lli1illi11IlII] = { [8] = 6, [7] = (lIl11l1IiI1lI1Iilll11[7] - 36) % 256, [6] = (lIl11l1IiI1lI1Iilll11[2] - 36) % 256 } elseif not not il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] == (lIl11l1IiI1lI1Iilll11[2] == 0) then ilI11lli1illi11IlII = ilI11lli1illi11IlII + 1 end elseif lIl11l1IiI1lI1Iilll11[2] == 215 then ilI11lli1illi11IlII = ilI11lli1illi11IlII - 1 liIiIIii1lIii1IIiI1[ilI11lli1illi11IlII] = { [8] = 11, [7] = (lIl11l1IiI1lI1Iilll11[7] - 215) % 256, [2] = (lIl11l1IiI1lI1Iilll11[6] - 215) % 256 } else I111iIll1lliIIIIlIl[il1ll1i1i1Iii11i1i1] = nil local IilililIIiIIiiIIIl1 = lIl11l1IiI1lI1Iilll11[7] local lIliIiIiiiii1li1lllIi = lIl11l1IiI1lI1Iilll11[6] if lIliIiIiiiii1li1lllIi == 1 then return true end local i1lIlIiIli1Ii11l1ii = IilililIIiIIiiIIIl1 + lIliIiIiiiii1li1lllIi - 2 if lIliIiIiiiii1li1lllIi == 0 then i1lIlIiIli1Ii11l1ii = lIliIIIilllIIlI1IIiil end return true, IilililIIiIIiiIIIl1, i1lIlIiIli1Ii11l1ii end elseif i1l1ll1i1l1IlIli1lI >= 4 then if i1l1ll1i1l1IlIli1lI < 6 then if i1l1ll1i1l1IlIli1lI == 5 then il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = { II1Illii1l1ili1iI1I(IIlIl1l1IlIIiI1l1Il, 1, lIl11l1IiI1lI1Iilll11[6] == 0 and 255 or lIl11l1IiI1lI1Iilll11[6]) } else local I11li111llliIIlliII if lIl11l1IiI1lI1Iilll11[4] then I11li111llliIIlliII = lIl11l1IiI1lI1Iilll11[10] else I11li111llliIIlliII = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[2]] end il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[6]][I11li111llliIIlliII] end elseif i1l1ll1i1l1IlIli1lI < 7 then il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[6]] elseif i1l1ll1i1l1IlIli1lI == 8 then local lIli1IiIllli1lilliil1 = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[6]] local I11li111llliIIlliII if lIl11l1IiI1lI1Iilll11[4] then I11li111llliIIlliII = lIl11l1IiI1lI1Iilll11[10] else I11li111llliIIlliII = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[2]] end il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7] + 1] = lIli1IiIllli1lilliil1 il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = lIli1IiIllli1lilliil1[I11li111llliIIlliII] else local I11i1lliii1IiiI1111 = ilIliI1ll1l1I1ii1li[lIl11l1IiI1lI1Iilll11[1]] local lIi1I1l1i1lI1Ii1I1I = {} if I11i1lliii1IiiI1111[lIl1llI1iIlII11i111lI] > 0 then do local lIllli1l1iliii11IlliI = {} lIi1I1l1i1lI1Ii1I1I = illI1I1iI1lIlli1iII({}, { __index = function(ii1IlIl1Ii1111lIiii, lIlIi1IiIliI1IiIiIIi1) local iI1IiIiIlli11lIilil = lIllli1l1iliii11IlliI[lIlIi1IiIliI1IiIiIIi1] return iI1IiIiIlli11lIilil[1][iI1IiIiIlli11lIilil[2]] end, __newindex = function(ii1IlIl1Ii1111lIiii, lIlIi1IiIliI1IiIiIIi1, IilIii11iIi1iiIlli1) local iI1IiIiIlli11lIilil = lIllli1l1iliii11IlliI[lIlIi1IiIliI1IiIiIIi1] iI1IiIiIlli11lIilil[1][iI1IiIiIlli11lIilil[2]] = IilIii11iIi1iiIlli1 end }) for IiIl11IIIllI11IllII = 1, I11i1lliii1IiiI1111[lIl1llI1iIlII11i111lI] do local l1I11I11I1llIlIi111 = liIiIIii1lIii1IIiI1[ilI11lli1illi11IlII] if l1I11I11I1llIlIi111[l11IiIIill1iiI1iI1i] == liii1111IIiiIili11l then lIllli1l1iliii11IlliI[IiIl11IIIllI11IllII - 1] = { il1ll1i1i1Iii11i1i1, l1I11I11I1llIlIi111[iiIl1Ii1IiillIl1I1i] } elseif l1I11I11I1llIlIi111[l11IiIIill1iiI1iI1i] == lIli1IIIiiIiIlli11ll1 then lIllli1l1iliii11IlliI[IiIl11IIIllI11IllII - 1] = { lll1iiiIillIiIlII1I, l1I11I11I1llIlIi111[iiIl1Ii1IiillIl1I1i] } end ilI11lli1illi11IlII = ilI11lli1illi11IlII + 1 end if not I111iIll1lliIIIIlIl[il1ll1i1i1Iii11i1i1] then I111iIll1lliIIIIlIl[il1ll1i1i1Iii11i1i1] = {lIllli1l1iliii11IlliI} else IIil11l11IlllIiiIIi(I111iIll1lliIIIIlIl[il1ll1i1i1Iii11i1i1], lIllli1l1iliii11IlliI) end end end local iiiiiII11IlI1liiI1i = IlIlliIii1lIll1I1l1(I11i1lliii1IiiI1111, lll1lIiiIiIli11Iiii, lIi1I1l1i1lI1Ii1I1I) il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = iiiiiII11IlI1liiI1i end elseif i1l1ll1i1l1IlIli1lI >= 2 then if i1l1ll1i1l1IlIli1lI == 3 then il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] = lll1iiiIillIiIlII1I[lIl11l1IiI1lI1Iilll11[6]] else ilI11lli1illi11IlII = ilI11lli1illi11IlII + (lIl11l1IiI1lI1Iilll11[1] - lIllillI11liiIi1IillI) end elseif i1l1ll1i1l1IlIli1lI == 1 then if lIl11l1IiI1lI1Iilll11[2] == 50 then ilI11lli1illi11IlII = ilI11lli1illi11IlII - 1 liIiIIii1lIii1IIiI1[ilI11lli1illi11IlII] = { [8] = 3, [7] = (lIl11l1IiI1lI1Iilll11[7] - 222) % 256, [6] = (lIl11l1IiI1lI1Iilll11[6] - 222) % 256 } else lll1iiiIillIiIlII1I[lIl11l1IiI1lI1Iilll11[6]] = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] end else lll1lIiiIiIli11Iiii[lIl11l1IiI1lI1Iilll11[5]] = il1ll1i1i1Iii11i1i1[lIl11l1IiI1lI1Iilll11[7]] end end end local lIiiiIiIliIiI11illi, I1ii1lIl11iiIiIl1lI, iIiIl11lIIIllliIiil, ll1l1iiIIililiiIil1 = II1IllIlIilll1IllIl(ll1l1IiiIIllIiIIi11) if lIiiiIiIliIiI11illi then if iIiIl11lIIIllliIiil then return II1Illii1l1ili1iI1I(il1ll1i1i1Iii11i1i1, iIiIl11lIIIllliIiil, ll1l1iiIIililiiIil1) end else i1iiii111li1IIiil1i("Luraph Script:" .. (iiIiIl1li1IiIIi1lil[ilI11lli1illi11IlII - 1] or "") .. ": " .. li1i1I1I1llIil1l1Il(I1ii1lIl11iiIiIl1lI), 0) end end ilili1liliiI1lIlli1(ii11Iili111l11111il, lll1lIiiIiIli11Iiii) return ii11Iili111l11111il end local lliIi1I111iIill1ilI = IilIiIi1i11l1iIi1i1() return IlIlliIii1lIll1I1l1(lliIi1I111iIill1ilI, lll1lIiiIiIli11Iiii)() end Iii1Iiil11iIll11I11("LPH!", IliIIi1I1i1I1i1lii1()) 
